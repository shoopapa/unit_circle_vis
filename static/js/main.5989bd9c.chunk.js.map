{"version":3,"sources":["Circle.js","Graph.js","App.js","serviceWorker.js","index.js"],"names":["cos","Math","sin","π","PI","f_matrix_times","a","b","c","d","x","y","f_rotate_matrix","f_vec_add","a1","a2","Circle","props","id","width","viewBox","xmlns","className","r","φ","cx","cy","rx","ry","t1","Δ","rotMatrix","sX","sY","eX","eY","fA","fS","join","f_svg_ellipse_arc","angle","l","h","tan","abs","style","transform","atan2","SinGraph","height","fill","CosGraph","stroke","TrigVis","state","angle2","e","data","this","getData","setState","v","O","document","documentElement","clientWidth","clientHeight","pos","clientX","clientY","sqrt","strokeWidth","onMouseMove","_onMouseMove","bind","onClick","_onMouseClick","renderSin","renderCos","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5989bd9c.chunk.js","sourcesContent":["import React from \"react\"\n//2.5*Math.sin(props.angle)*(props.l/Math.abs(props.l))+\n\nconst cos = Math.cos;\nconst sin = Math.sin;\nconst π = Math.PI;\n\nconst f_matrix_times = (( [[a,b], [c,d]], [x,y]) => [ a * x + b * y, c * x + d * y]);\nconst f_rotate_matrix = ((x) => [[cos(x),-sin(x)], [sin(x), cos(x)]]);\nconst f_vec_add = (([a1, a2], [b1, b2]) => [a1 + b1, a2 + b2]);\n\nfunction f_svg_ellipse_arc([cx,cy],[rx,ry], [t1, Δ], φ ) {\n  \n  /* [\n  returns a SVG path element that represent a ellipse.\n  cx,cy → center of ellipse\n  rx,ry → major minor radius\n  t1 → start angle, in radian.\n  Δ → angle to sweep, in radian. positive.\n  φ → rotation on the whole, in radian\n  url: SVG Circle Arc http://xahlee.info/js/svg_circle_arc.html\n  Version 2019-06-19\n  ] */\n  Δ = Δ % (2*π);\n  const rotMatrix = f_rotate_matrix (φ);\n  const [sX, sY] = ( f_vec_add ( f_matrix_times ( rotMatrix, [rx * cos(t1), ry * sin(t1)] ), [cx,cy] ) );\n  const [eX, eY] = ( f_vec_add ( f_matrix_times ( rotMatrix, [rx * cos(t1+Δ), ry * sin(t1+Δ)] ), [cx,cy] ) );\n  const fA = ( (  Δ > π ) ? 1 : 0 );\n  const fS = ( (  Δ > 0 ) ? 1 : 0 );\n  return (\n    <path \n      d={\"M \" + sX + \" \" + sY + \" A \" + [ rx , ry , φ / (2*π) *360, fA, fS, eX, eY ].join(\" \")}\n      className=\"Arc\"\n    />\n  )\n}\n\nexport default function Circle(props) {\n\n  return (\n    <div  >\n      <svg id=\"svg\" width=\"30vw\"  viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg \">\n        <g> \n          <path className=\"Axis\" d={\"M \"+(300-props.r)+\" 300 h\"+ 2*props.r}/> \n          <path className=\"Axis\" d={\"M300 \"+ (300-props.r) +\"  v\" + 2*props.r}/>   \n           {f_svg_ellipse_arc([300,300],[props.r*1/7,props.r*1/7],[0,-props.angle],0)}\n        </g>\n        <g >\n          <path className=\"Sin\" d={\"M\"+ (-2.5*Math.cos(props.angle)+props.l + 300 ) +\" 302.5 v\"+ -props.h+2}/> \n          <path className=\"Cos\" d={\"M 300 300 h\"+ (2.5*(Math.sin(props.angle))*((Math.tan(props.angle))/(Math.abs(Math.tan(props.angle))))+ props.l)}/> \n        </g>\n        <g id=\"Rot\" style={{transform: \"rotate(\"+ Math.atan2(-props.h,props.l) +\"rad)\"}} >\n          <path className=\"Rad\" d={\"M300 300 h\"+props.r}/> \n        </g>\n        <g>\n          <circle className=\"Circle\" cx=\"300\" cy=\"300\" r={props.r} />\n          <circle className=\"Pin\" cx=\"300\" cy=\"300\" r={props.r*(1/40)}/>\n        </g>\n        <g>\n        \n        </g>\n      </svg>\n      \n    </div>\n\n  )\n}","import React from \"react\"\n\nconst SinGraph = () => {\n  return(\n    <g>\n      <g className=\"Move\">\n        <path \n          className=\"Graph\"\n          d=\"M 0 99 C 36.42 99, 63.58 1 100 1, \n          S 163.58 99 200 99 \n          c 36.42 1, 63.58 -99 100 -99\"\n        /> \n      </g>\n      <rect x=\"-2\" y=\"50.2\" height=\"5\" width=\"5\" style={{fill:\"#282c34\"}}/>\n    </g>\n  )\n}\n\nconst CosGraph = ()=>{\n  return (\n    <path\n      className=\"Graph\"\n      stroke=\"white\"\n      fill=\"none\"\n      d=\"M 0 1 c36.42 1, 63.58 99, 100 98 S 163.58 1 200 1\"\n    />\n  );\n}\n\nexport {SinGraph, CosGraph}","import React from 'react';\nimport './App.css';\nimport Circle from \"./Circle.js\"\nimport {SinGraph, CosGraph} from \"./Graph.js\"\n  \nconst r = 295\nclass TrigVis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      angle: 0,\n      angle2:0,\n      h: 0,\n      l: 0,\n      cos:true\n    };\n  }\n/*\n  toggleGraph(e) {\n    console.log(this.state.cos)\n    const v = this.state.cos\n    this.setState(()=>({\n      cos: v ? false : true\n    }))\n\n  }\n  */\n  \n  _onMouseMove(e) {\n    const data = this.getData(e);\n    this.setState({ \n      angle: data.angle,\n      angle2: data.angle2,\n      h: data.h,\n      l: data.l\n    });\n  }\n\n  _onMouseClick(e) {\n    const v = this.state.cos\n    const data = this.getData(e);\n    this.setState(() => ({ \n      angle: data.angle,\n      angle2: data.angle2,\n      h: data.h,\n      l: data.l,\n      cos: v ? false : true\n     \n    }));\n  }\n\n  getData(e) {\n    const O = [document.documentElement.clientWidth/6, document.documentElement.clientHeight/2]\n    const pos = [e.clientX-O[0],O[1]-e.clientY]\n    const h = (r-2.25)*(pos[1]/(Math.sqrt(pos[1]**2 + pos[0]**2)))\n    const l = (r-2.25)*(pos[0]/(Math.sqrt(pos[1]**2 + pos[0]**2)))\n    const angle = Math.atan2( pos[1], pos[0] )\n    const anglePos = Math.atan2( pos[1], pos[0] ) > 0 ? Math.atan2( pos[1], pos[0] ) : 2*Math.PI + Math.atan2( pos[1], pos[0] )\n    return({\n      h: h,\n      l: l,\n      angle: angle,\n      angle2: anglePos\n   \n    })\n  }\n\n  renderSin() {\n    return (\n      <div >\n      <svg  width=\"100%\" viewBox=\"0 0 200 100\" >\n        <path className=\"Bar-sin\" d={\"M\"+ this.state.angle2*100/Math.PI +\" 50 v\"+ -49*Math.sin(this.state.angle)}/>  \n        <path strokeWidth=\".25\" stroke=\"rgb(219, 102, 102)\" d={\"M 0 50 h200\"}/>  \n        <SinGraph />\n        <rect x={this.state.angle2*100/Math.PI+.6} height=\"100\" style={{fill:\"#282c34\"}} width=\"200\"/>\n      </svg>\n    </div>\n    )\n  }\n\n  renderCos() {\n    return (\n      <div>\n        <svg  width=\"100%\" viewBox=\"0 0 200 100\" >       \n          <path className=\"Bar-cos\" d={\"M\"+ ((this.state.angle2*100/Math.PI)) +\" 50 v\"+ -49*Math.cos(this.state.angle)}/>\n          <path strokeWidth=\".25\" stroke=\"rgb(219, 102, 102)\" d={\"M 0 50 h200\"}/>  \n          <CosGraph />\n          <rect x={this.state.angle2*100/Math.PI+.6} height=\"100\" style={{fill:\"#282c34\"}} width=\"200\"/>\n        </svg>\n      </div>\n    )\n  }\n\n  render() {\n    return(\n      <div>\n        <div className=\"App-header\" \n          onMouseMove={this._onMouseMove.bind(this)}\n          onClick={this._onMouseClick.bind(this)}\n        > \n            <Circle  r={r} angle={this.state.angle} h={this.state.h} l={this.state.l}/>\n            <div className=\"Graph-div\" >\n              {this.state.cos ? this.renderSin() : this.renderCos()}\n            </div>\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nexport default TrigVis;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}